//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapService.MotorcycleSearchServiceSoap")]
    public interface MotorcycleSearchServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchByMotorcycleMake", ReplyAction="*")]
        System.Threading.Tasks.Task<SoapService.SearchByMotorcycleMakeResponse> SearchByMotorcycleMakeAsync(SoapService.SearchByMotorcycleMakeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchByMotorcycleMakeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SearchByMotorcycleMake", Namespace="http://tempuri.org/", Order=0)]
        public SoapService.SearchByMotorcycleMakeRequestBody Body;
        
        public SearchByMotorcycleMakeRequest()
        {
        }
        
        public SearchByMotorcycleMakeRequest(SoapService.SearchByMotorcycleMakeRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchByMotorcycleMakeRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string searchTerm;
        
        public SearchByMotorcycleMakeRequestBody()
        {
        }
        
        public SearchByMotorcycleMakeRequestBody(string searchTerm)
        {
            this.searchTerm = searchTerm;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchByMotorcycleMakeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SearchByMotorcycleMakeResponse", Namespace="http://tempuri.org/", Order=0)]
        public SoapService.SearchByMotorcycleMakeResponseBody Body;
        
        public SearchByMotorcycleMakeResponse()
        {
        }
        
        public SearchByMotorcycleMakeResponse(SoapService.SearchByMotorcycleMakeResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchByMotorcycleMakeResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SearchByMotorcycleMakeResult;
        
        public SearchByMotorcycleMakeResponseBody()
        {
        }
        
        public SearchByMotorcycleMakeResponseBody(string SearchByMotorcycleMakeResult)
        {
            this.SearchByMotorcycleMakeResult = SearchByMotorcycleMakeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface MotorcycleSearchServiceSoapChannel : SoapService.MotorcycleSearchServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class MotorcycleSearchServiceSoapClient : System.ServiceModel.ClientBase<SoapService.MotorcycleSearchServiceSoap>, SoapService.MotorcycleSearchServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MotorcycleSearchServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(MotorcycleSearchServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), MotorcycleSearchServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MotorcycleSearchServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MotorcycleSearchServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MotorcycleSearchServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MotorcycleSearchServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MotorcycleSearchServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SoapService.SearchByMotorcycleMakeResponse> SoapService.MotorcycleSearchServiceSoap.SearchByMotorcycleMakeAsync(SoapService.SearchByMotorcycleMakeRequest request)
        {
            return base.Channel.SearchByMotorcycleMakeAsync(request);
        }
        
        public System.Threading.Tasks.Task<SoapService.SearchByMotorcycleMakeResponse> SearchByMotorcycleMakeAsync(string searchTerm)
        {
            SoapService.SearchByMotorcycleMakeRequest inValue = new SoapService.SearchByMotorcycleMakeRequest();
            inValue.Body = new SoapService.SearchByMotorcycleMakeRequestBody();
            inValue.Body.searchTerm = searchTerm;
            return ((SoapService.MotorcycleSearchServiceSoap)(this)).SearchByMotorcycleMakeAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MotorcycleSearchServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.MotorcycleSearchServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MotorcycleSearchServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:44340/MotorcycleSearchService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.MotorcycleSearchServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:44340/MotorcycleSearchService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            MotorcycleSearchServiceSoap,
            
            MotorcycleSearchServiceSoap12,
        }
    }
}
